package tcs.ril.storebot.view.Adapter;import android.app.Activity;import android.app.Dialog;import android.content.Intent;import android.os.Build;import android.os.Bundle;import android.support.annotation.NonNull;import android.support.v7.widget.LinearLayoutManager;import android.support.v7.widget.RecyclerView;import android.text.method.ScrollingMovementMethod;import android.util.Log;import android.view.View;import android.view.Window;import android.widget.Button;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.TextView;import com.squareup.picasso.MemoryPolicy;import com.squareup.picasso.Picasso;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;import tcs.ril.storebot.R;import tcs.ril.storebot.model.OrderHistory;import tcs.ril.storebot.model.UserMessage;import tcs.ril.storebot.model.UsersWithPendingPickup;import tcs.ril.storebot.view.Activity.PendingDescriptionActivity;import static android.support.constraint.Constraints.TAG;import static android.view.View.combineMeasuredStates;public class RecievedViewHolder extends  RecyclerView.ViewHolder{    TextView messageText;    TextView timeText;    LinearLayout viewLayout;    RecyclerView btnViewRecylcerView;    RecyclerView.Adapter viewAdapter;    RecyclerView.LayoutManager layoutManager;    RecyclerView auxViewRecylcerView;    RecyclerView.Adapter auxRVAdapter;    RecyclerView.LayoutManager auxlayoutManager;    TextView auxMessage;    LinearLayout auxLayout;    Activity mContext;    ImageView rcvImageView;    View view;    public RecievedViewHolder(View itemView,Activity context) {        super(itemView);        this.mContext=context;        timeText = itemView.findViewById(R.id.rcv_time);        messageText = itemView.findViewById(R.id.rcv_text);        viewLayout = itemView.findViewById(R.id.view_btn);        /*Recycler view with view buttons 1st message*/        btnViewRecylcerView =itemView.findViewById(R.id.button_view_list_view);        rcvImageView=itemView.findViewById(R.id.rcv_image_view);        layoutManager=new LinearLayoutManager(mContext);        this.view=itemView;        btnViewRecylcerView.setHasFixedSize(true);        btnViewRecylcerView.setLayoutManager(layoutManager);        /**********************************************/        /*Setting the layout manager for the second message or delayer message*/        auxMessage=itemView.findViewById(R.id.aux_text);        auxLayout=itemView.findViewById(R.id.aux_layout);        auxViewRecylcerView=itemView.findViewById(R.id.aux_button_list_view);        auxlayoutManager=new LinearLayoutManager(mContext);        auxViewRecylcerView.setHasFixedSize(true); //Increase the performace of the recycler view        auxViewRecylcerView.setLayoutManager(auxlayoutManager);        /***********************************************/    }    public void bind(final UserMessage message)    {        if(message.getPendingPickups()==null)        {            final String url = message.getURL();            if(url!=null){                rcvImageView.setVisibility(View.VISIBLE);            Picasso.get()                    .load(url)                    .fit()                    .centerCrop()                    .into(rcvImageView);            view.setOnClickListener(new View.OnClickListener() {                @Override                public void onClick(View view) {                    final Dialog nagDialog = new Dialog(mContext,android.R.style.Theme_Translucent_NoTitleBar_Fullscreen);                    nagDialog.requestWindowFeature(Window.FEATURE_NO_TITLE);                    nagDialog.setCancelable(true);                    nagDialog.setContentView(R.layout.preview_image);                    Button btnClose = (Button)nagDialog.findViewById(R.id.btnIvClose);                    ImageView ivPreview = (ImageView)nagDialog.findViewById(R.id.iv_preview_image);                    Picasso.get()                            .load(url)                            .memoryPolicy(MemoryPolicy.NO_CACHE, MemoryPolicy.NO_STORE)                            .into(ivPreview);                    btnClose.setOnClickListener(new View.OnClickListener() {                        @Override                        public void onClick(View arg0) {                            nagDialog.dismiss();                        }                    });                    nagDialog.show();                }            });            }else{                rcvImageView.setVisibility(View.GONE);            }            Log.d(TAG, "bind: LOTA LOTA");            messageText.setText(message.getBtnMessageText());            viewLayout.setVisibility(View.VISIBLE);            btnViewRecylcerView.setVisibility(View.GONE);            viewLayout.setOnClickListener(new View.OnClickListener() {                @Override                public void onClick(View view) {                    Intent intent = new Intent(mContext,PendingDescriptionActivity.class);                    if(message.getURL()!=null){                   intent.putExtra("URL",message.getURL());}                    Log.d(TAG, "onClick: "+message.getMessage());                    intent.putExtra("DESC",message.getMessage());                    mContext.startActivity(intent);                }            });            if(message.getBtnText()!=null && message.getAuxBtnTag()==1)            {                int aux=message.getAuxTag();                switch(aux){                    case 0:                        auxLayout.setVisibility(View.VISIBLE);                        auxMessage.setVisibility(View.GONE);                        auxViewRecylcerView.setVisibility(View.VISIBLE);                        auxRVAdapter=new ListButtonAdapter(mContext,message.getBtnText(),message.getBtnValue());                        auxViewRecylcerView.setAdapter(auxRVAdapter);                        break;                    case 1:                        auxLayout.setVisibility(View.VISIBLE);                        auxMessage.setVisibility(View.VISIBLE);                        auxViewRecylcerView.setVisibility(View.VISIBLE);                        auxMessage.setText(message.getAuxMessage());                        auxRVAdapter=new ListButtonAdapter(mContext,message.getBtnText(),message.getBtnValue());                        auxViewRecylcerView.setAdapter(auxRVAdapter);                        break;                }            }        }else {            Log.d(TAG, "bind: else");            rcvImageView.setVisibility(View.GONE);            messageText.setText(message.getBtnMessageText());            timeText.setText(message.getTime());            btnViewRecylcerView.setVisibility(View.VISIBLE);            viewLayout.setVisibility(View.GONE);            viewAdapter= new ViewListButtonAdapter(message.getViewBtnValue(),mContext,message.getViewBtnTex());            btnViewRecylcerView.setAdapter(viewAdapter);        }    }}