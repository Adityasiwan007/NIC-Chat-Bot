package tcs.ril.storebot.view.Adapter;import android.app.Activity;import android.content.Intent;import android.graphics.Color;import android.os.Bundle;import android.support.annotation.NonNull;import android.support.constraint.ConstraintLayout;import android.support.v7.widget.RecyclerView;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.TextView;import java.lang.reflect.Array;import java.util.ArrayList;import java.util.HashMap;import java.util.LinkedHashMap;import java.util.List;import java.util.Map;import tcs.ril.storebot.R;import tcs.ril.storebot.model.Object;import tcs.ril.storebot.model.OrderHistory;import tcs.ril.storebot.model.UsersWithPendingPickup;import tcs.ril.storebot.view.Activity.PendingPickupActivity;public class ViewListButtonAdapter extends RecyclerView.Adapter<ViewListButtonAdapter.ViewListButtonViewHolder> {    public static Map<String , List<OrderHistory>> pendingPickup=new LinkedHashMap<>();    public static  List<String> viewList =new ArrayList<>();    private Activity mContext;    public static boolean isClicked;    public static int pos;    String TAG="ViewListButtonAdapter : ";    View view;    public ViewListButtonAdapter(Map<String, List<OrderHistory>> pending, Activity mContext,List<String> viewButtons) {        this.pendingPickup= pending;        this.mContext = mContext;        this.viewList =viewButtons;        Log.d(TAG, "onCreateViewHolder: "+viewList+pendingPickup);    }    @NonNull    @Override    public ViewListButtonAdapter.ViewListButtonViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int position) {        view=LayoutInflater.from(parent.getContext()).inflate(R.layout.view_btn_item,parent,false);        return  new ViewListButtonViewHolder(view);    }    @Override    public void onBindViewHolder(final ViewListButtonAdapter.ViewListButtonViewHolder holder, final int position) {        int rem=position%4;        switch(rem){            case 0:                holder.clickLayout.setBackgroundResource(R.drawable.rcv_btn_orange_bg);                holder.viewBtnText.setTextColor(0xffe27b4f);                break;            case 1:                holder.clickLayout.setBackgroundResource(R.drawable.rcv_btn_violet_bg);                holder.viewBtnText.setTextColor(0xff9666b2);                break;            case 2:                holder.clickLayout.setBackgroundResource(R.drawable.rcv_btn_red_bg);                holder.viewBtnText.setTextColor(0xffe27b4f);                break;            case 3:                holder.clickLayout.setBackgroundResource(R.drawable.rcv_btn_green_bg);                holder.viewBtnText.setTextColor(0xff40b079);                break;        }        Log.d(TAG, "onBindViewHolder: VIEW LIST SIZE CHECK"+viewList.size());        holder.valueText.setText(viewList.get(position));        view.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                Intent intent= new Intent(mContext,PendingPickupActivity.class);                int start=viewList.get(position).indexOf("-")+2;               String tid=viewList.get(position).substring(start,viewList.get(position).lastIndexOf(" "));                Log.d(TAG, "onClick: tid"+tid);                intent.putExtra("tid",tid);                mContext.startActivity(intent);            }        });    }    @Override    public int getItemCount() {        return viewList.size();    }    public class ViewListButtonViewHolder extends  RecyclerView.ViewHolder{        public ConstraintLayout clickLayout;        TextView valueText;        TextView viewBtnText;        public ViewListButtonViewHolder(@NonNull View itemView) {            super(itemView);            viewBtnText=itemView.findViewById(R.id.view_item_view_btn_text);            valueText=itemView.findViewById(R.id.view_value_text);            clickLayout=itemView.findViewById(R.id.resp_view_btn_text_layout);        }    }}