package tcs.ril.storebot.view.Adapter;import android.app.Activity;import android.app.Dialog;import android.graphics.Color;import android.support.annotation.NonNull;import android.support.v7.widget.RecyclerView;import android.util.Log;import android.view.View;import android.view.Window;import android.widget.Button;import android.widget.ImageView;import android.widget.TextView;import com.squareup.picasso.MemoryPolicy;import com.squareup.picasso.Picasso;import tcs.ril.storebot.R;import tcs.ril.storebot.model.UserMessage;import static android.support.constraint.Constraints.TAG;public class ReceivedImageHolder extends RecyclerView.ViewHolder {    ImageView messageImage;    TextView timeText;    TextView msgText;    Activity mContext;    View view;    public ReceivedImageHolder(@NonNull View itemView,Activity activity) {        super(itemView);        this.mContext=activity;        this.view=itemView;        Log.d(TAG, "ReceivedImageHolder: ");        messageImage = itemView.findViewById(R.id.rcv_image);        timeText = itemView.findViewById(R.id.rcv_time);        msgText=itemView.findViewById(R.id.rcv_img_text);    }    void bind(UserMessage message) {        final String url = message.getURL();        Log.d(TAG, "bind: " + url+message.getTime());        timeText.setText(message.getTime());        msgText.setText(message.getMessage());        msgText.setTextColor(Color.WHITE);        msgText.setVisibility(View.VISIBLE);        if(message.getMessage().isEmpty())        {            msgText.setVisibility(View.GONE);        }        Picasso.get()                .load(url)                .fit()                .centerCrop()                .into(messageImage);        view.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                final Dialog nagDialog = new Dialog(mContext,android.R.style.Theme_Translucent_NoTitleBar_Fullscreen);                nagDialog.requestWindowFeature(Window.FEATURE_NO_TITLE);                nagDialog.setCancelable(true);                nagDialog.setContentView(R.layout.preview_image);                Button btnClose = (Button)nagDialog.findViewById(R.id.btnIvClose);                ImageView ivPreview = (ImageView)nagDialog.findViewById(R.id.iv_preview_image);                Picasso.get()                        .load(url)                        .memoryPolicy(MemoryPolicy.NO_CACHE, MemoryPolicy.NO_STORE)                        .into(ivPreview);                btnClose.setOnClickListener(new View.OnClickListener() {                    @Override                    public void onClick(View arg0) {                        nagDialog.dismiss();                    }                });                nagDialog.show();            }        });    }}