package tcs.ril.storebot.view.Adapter;import android.app.Activity;import android.app.Dialog;import android.support.annotation.NonNull;import android.support.v7.widget.RecyclerView;import android.util.Log;import android.view.View;import android.view.Window;import android.widget.Button;import android.widget.ImageView;import android.widget.TextView;import com.squareup.picasso.MemoryPolicy;import com.squareup.picasso.Picasso;import tcs.ril.storebot.R;import tcs.ril.storebot.model.UserMessage;import tcs.ril.storebot.view.Activity.MainActivity;import tcs.ril.storebot.view.Other.BitmapTransform;import tcs.ril.storebot.view.Other.CircleTransform;import static android.support.constraint.Constraints.TAG;//import static tcs.ril.storebot.view.Adapter.ListButtonAdapter.buttons;public class SentImageHolder extends RecyclerView.ViewHolder {    ImageView messageImage,profileImage;    TextView sentTime;    private static final int MAX_WIDTH = 1024;    private static final int MAX_HEIGHT = 720;    Activity mContext;    View view;    public SentImageHolder(@NonNull View itemView, Activity context) {        super(itemView);        this.mContext=context;        this.view=itemView;        Log.d(TAG, "SentImageHolder: ");        messageImage = itemView.findViewById(R.id.send_image);        sentTime = itemView.findViewById(R.id.send_time);        profileImage=itemView.findViewById(R.id.profile_img);//        buttons.clear();//        itemView.setOnClickListener(new View.OnClickListener() {//            @Override//            public void onClick(View view) {////            }//        });    }    void bind(UserMessage message) {        int size = (int) Math.ceil(Math.sqrt(MAX_WIDTH * MAX_HEIGHT));//        buttons.clear();        final String url = message.getURL();        sentTime.setText(message.getTime());        Picasso.get()                .load(url)                .transform(new BitmapTransform(MAX_WIDTH, MAX_HEIGHT))                .resize(size, size)                .memoryPolicy(MemoryPolicy.NO_CACHE, MemoryPolicy.NO_STORE)                .centerInside()                .into(messageImage);        view.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                final Dialog nagDialog = new Dialog(mContext,android.R.style.Theme_Translucent_NoTitleBar_Fullscreen);                nagDialog.requestWindowFeature(Window.FEATURE_NO_TITLE);                nagDialog.setCancelable(false);                nagDialog.setContentView(R.layout.preview_image);                Button btnClose = (Button)nagDialog.findViewById(R.id.btnIvClose);                ImageView ivPreview = (ImageView)nagDialog.findViewById(R.id.iv_preview_image);                Picasso.get()                        .load(url)                        .memoryPolicy(MemoryPolicy.NO_CACHE, MemoryPolicy.NO_STORE)                        .centerCrop()                        .fit()                        .into(ivPreview);                btnClose.setOnClickListener(new View.OnClickListener() {                    @Override                    public void onClick(View arg0) {                        nagDialog.dismiss();                    }                });                nagDialog.show();            }        });        Log.d(TAG, "bind: "+message.getProfileURL());        Picasso.get()                .load(message.getProfileURL())                .transform(new CircleTransform())                .centerCrop()                .fit()                .into(profileImage);    }}